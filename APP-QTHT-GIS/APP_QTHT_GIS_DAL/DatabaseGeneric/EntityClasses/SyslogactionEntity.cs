//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using App.QTHTGis.Dal.HelperClasses;
using App.QTHTGis.Dal.FactoryClasses;
using App.QTHTGis.Dal.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace App.QTHTGis.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'Syslogaction'.<br/><br/></summary>
	[Serializable]
	public partial class SyslogactionEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static SyslogactionEntityStaticMetaData _staticMetaData = new SyslogactionEntityStaticMetaData();
		private static SyslogactionRelations _relationsFactory = new SyslogactionRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class SyslogactionEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public SyslogactionEntityStaticMetaData()
			{
				SetEntityCoreInfo("SyslogactionEntity", InheritanceHierarchyType.None, false, (int)App.QTHTGis.Dal.EntityType.SyslogactionEntity, typeof(SyslogactionEntity), typeof(SyslogactionEntityFactory), false);
			}
		}

		/// <summary>Static ctor</summary>
		static SyslogactionEntity()
		{
		}

		/// <summary> CTor</summary>
		public SyslogactionEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public SyslogactionEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this SyslogactionEntity</param>
		public SyslogactionEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for Syslogaction which data should be fetched into this Syslogaction object</param>
		public SyslogactionEntity(System.Int64 id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for Syslogaction which data should be fetched into this Syslogaction object</param>
		/// <param name="validator">The custom validator object for this SyslogactionEntity</param>
		public SyslogactionEntity(System.Int64 id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected SyslogactionEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this SyslogactionEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static SyslogactionRelations Relations { get { return _relationsFactory; } }

		/// <summary>The Action property of the Entity Syslogaction<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogaction"."action".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 100.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Action
		{
			get { return (System.String)GetValue((int)SyslogactionFieldIndex.Action, true); }
			set	{ SetValue((int)SyslogactionFieldIndex.Action, value); }
		}

		/// <summary>The Data property of the Entity Syslogaction<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogaction"."data".<br/>Table field type characteristics (type, precision, scale, length): Text, 0, 0, 1073741824.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Data
		{
			get { return (System.String)GetValue((int)SyslogactionFieldIndex.Data, true); }
			set	{ SetValue((int)SyslogactionFieldIndex.Data, value); }
		}

		/// <summary>The DateCreate property of the Entity Syslogaction<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogaction"."date_create".<br/>Table field type characteristics (type, precision, scale, length): Timestamp, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> DateCreate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)SyslogactionFieldIndex.DateCreate, false); }
			set	{ SetValue((int)SyslogactionFieldIndex.DateCreate, value); }
		}

		/// <summary>The Id property of the Entity Syslogaction<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogaction"."id".<br/>Table field type characteristics (type, precision, scale, length): Bigint, 20, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int64 Id
		{
			get { return (System.Int64)GetValue((int)SyslogactionFieldIndex.Id, true); }
			set { SetValue((int)SyslogactionFieldIndex.Id, value); }		}

		/// <summary>The IpClient property of the Entity Syslogaction<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogaction"."ip_client".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 100.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String IpClient
		{
			get { return (System.String)GetValue((int)SyslogactionFieldIndex.IpClient, true); }
			set	{ SetValue((int)SyslogactionFieldIndex.IpClient, value); }
		}

		/// <summary>The Note property of the Entity Syslogaction<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogaction"."note".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 500.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Note
		{
			get { return (System.String)GetValue((int)SyslogactionFieldIndex.Note, true); }
			set	{ SetValue((int)SyslogactionFieldIndex.Note, value); }
		}

		/// <summary>The ObjectName property of the Entity Syslogaction<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogaction"."object_name".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 100.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ObjectName
		{
			get { return (System.String)GetValue((int)SyslogactionFieldIndex.ObjectName, true); }
			set	{ SetValue((int)SyslogactionFieldIndex.ObjectName, value); }
		}

		/// <summary>The UserId property of the Entity Syslogaction<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogaction"."user_id".<br/>Table field type characteristics (type, precision, scale, length): Bigint, 20, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int64> UserId
		{
			get { return (Nullable<System.Int64>)GetValue((int)SyslogactionFieldIndex.UserId, false); }
			set	{ SetValue((int)SyslogactionFieldIndex.UserId, value); }
		}

		/// <summary>The UserName property of the Entity Syslogaction<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogaction"."user_name".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 500.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String UserName
		{
			get { return (System.String)GetValue((int)SyslogactionFieldIndex.UserName, true); }
			set	{ SetValue((int)SyslogactionFieldIndex.UserName, value); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace App.QTHTGis.Dal
{
	public enum SyslogactionFieldIndex
	{
		///<summary>Action. </summary>
		Action,
		///<summary>Data. </summary>
		Data,
		///<summary>DateCreate. </summary>
		DateCreate,
		///<summary>Id. </summary>
		Id,
		///<summary>IpClient. </summary>
		IpClient,
		///<summary>Note. </summary>
		Note,
		///<summary>ObjectName. </summary>
		ObjectName,
		///<summary>UserId. </summary>
		UserId,
		///<summary>UserName. </summary>
		UserName,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace App.QTHTGis.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: Syslogaction. </summary>
	public partial class SyslogactionRelations: RelationFactory
	{

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticSyslogactionRelations
	{

		/// <summary>CTor</summary>
		static StaticSyslogactionRelations() { }
	}
}
