//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using App.QTHTGis.Dal.HelperClasses;
using App.QTHTGis.Dal.FactoryClasses;
using App.QTHTGis.Dal.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace App.QTHTGis.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'Sysusergroup'.<br/><br/></summary>
	[Serializable]
	public partial class SysusergroupEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private SysgroupEntity _sysgroup;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static SysusergroupEntityStaticMetaData _staticMetaData = new SysusergroupEntityStaticMetaData();
		private static SysusergroupRelations _relationsFactory = new SysusergroupRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Sysgroup</summary>
			public static readonly string Sysgroup = "Sysgroup";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class SysusergroupEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public SysusergroupEntityStaticMetaData()
			{
				SetEntityCoreInfo("SysusergroupEntity", InheritanceHierarchyType.None, false, (int)App.QTHTGis.Dal.EntityType.SysusergroupEntity, typeof(SysusergroupEntity), typeof(SysusergroupEntityFactory), false);
				AddNavigatorMetaData<SysusergroupEntity, SysgroupEntity>("Sysgroup", "Sysusergroups", (a, b) => a._sysgroup = b, a => a._sysgroup, (a, b) => a.Sysgroup = b, App.QTHTGis.Dal.RelationClasses.StaticSysusergroupRelations.SysgroupEntityUsingGroupidStatic, ()=>new SysusergroupRelations().SysgroupEntityUsingGroupid, null, new int[] { (int)SysusergroupFieldIndex.Groupid }, null, true, (int)App.QTHTGis.Dal.EntityType.SysgroupEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static SysusergroupEntity()
		{
		}

		/// <summary> CTor</summary>
		public SysusergroupEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public SysusergroupEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this SysusergroupEntity</param>
		public SysusergroupEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="groupid">PK value for Sysusergroup which data should be fetched into this Sysusergroup object</param>
		/// <param name="userid">PK value for Sysusergroup which data should be fetched into this Sysusergroup object</param>
		public SysusergroupEntity(System.Int64 groupid, System.Int64 userid) : this(groupid, userid, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="groupid">PK value for Sysusergroup which data should be fetched into this Sysusergroup object</param>
		/// <param name="userid">PK value for Sysusergroup which data should be fetched into this Sysusergroup object</param>
		/// <param name="validator">The custom validator object for this SysusergroupEntity</param>
		public SysusergroupEntity(System.Int64 groupid, System.Int64 userid, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Groupid = groupid;
			this.Userid = userid;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected SysusergroupEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Sysgroup' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSysgroup() { return CreateRelationInfoForNavigator("Sysgroup"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this SysusergroupEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static SysusergroupRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Sysgroup' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSysgroup { get { return _staticMetaData.GetPrefetchPathElement("Sysgroup", CommonEntityBase.CreateEntityCollection<SysgroupEntity>()); } }

		/// <summary>The Groupid property of the Entity Sysusergroup<br/><br/></summary>
		/// <remarks>Mapped on  table field: "sysusergroup"."groupid".<br/>Table field type characteristics (type, precision, scale, length): Bigint, 20, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int64 Groupid
		{
			get { return (System.Int64)GetValue((int)SysusergroupFieldIndex.Groupid, true); }
			set	{ SetValue((int)SysusergroupFieldIndex.Groupid, value); }
		}

		/// <summary>The Userid property of the Entity Sysusergroup<br/><br/></summary>
		/// <remarks>Mapped on  table field: "sysusergroup"."userid".<br/>Table field type characteristics (type, precision, scale, length): Bigint, 20, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int64 Userid
		{
			get { return (System.Int64)GetValue((int)SysusergroupFieldIndex.Userid, true); }
			set	{ SetValue((int)SysusergroupFieldIndex.Userid, value); }
		}

		/// <summary>Gets / sets related entity of type 'SysgroupEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual SysgroupEntity Sysgroup
		{
			get { return _sysgroup; }
			set { SetSingleRelatedEntityNavigator(value, "Sysgroup"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace App.QTHTGis.Dal
{
	public enum SysusergroupFieldIndex
	{
		///<summary>Groupid. </summary>
		Groupid,
		///<summary>Userid. </summary>
		Userid,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace App.QTHTGis.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: Sysusergroup. </summary>
	public partial class SysusergroupRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between SysusergroupEntity and SysgroupEntity over the m:1 relation they have, using the relation between the fields: Sysusergroup.Groupid - Sysgroup.Groupid</summary>
		public virtual IEntityRelation SysgroupEntityUsingGroupid
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Sysgroup", false, new[] { SysgroupFields.Groupid, SysusergroupFields.Groupid }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticSysusergroupRelations
	{
		internal static readonly IEntityRelation SysgroupEntityUsingGroupidStatic = new SysusergroupRelations().SysgroupEntityUsingGroupid;

		/// <summary>CTor</summary>
		static StaticSysusergroupRelations() { }
	}
}
