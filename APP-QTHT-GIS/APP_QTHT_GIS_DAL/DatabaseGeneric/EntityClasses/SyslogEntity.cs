//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using App.QTHTGis.Dal.HelperClasses;
using App.QTHTGis.Dal.FactoryClasses;
using App.QTHTGis.Dal.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace App.QTHTGis.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'Syslog'.<br/><br/></summary>
	[Serializable]
	public partial class SyslogEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static SyslogEntityStaticMetaData _staticMetaData = new SyslogEntityStaticMetaData();
		private static SyslogRelations _relationsFactory = new SyslogRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class SyslogEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public SyslogEntityStaticMetaData()
			{
				SetEntityCoreInfo("SyslogEntity", InheritanceHierarchyType.None, false, (int)App.QTHTGis.Dal.EntityType.SyslogEntity, typeof(SyslogEntity), typeof(SyslogEntityFactory), false);
			}
		}

		/// <summary>Static ctor</summary>
		static SyslogEntity()
		{
		}

		/// <summary> CTor</summary>
		public SyslogEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public SyslogEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this SyslogEntity</param>
		public SyslogEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for Syslog which data should be fetched into this Syslog object</param>
		public SyslogEntity(System.Int64 id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for Syslog which data should be fetched into this Syslog object</param>
		/// <param name="validator">The custom validator object for this SyslogEntity</param>
		public SyslogEntity(System.Int64 id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected SyslogEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this SyslogEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static SyslogRelations Relations { get { return _relationsFactory; } }

		/// <summary>The ICreateBy property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."i_create_by".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ICreateBy
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.ICreateBy, true); }
			set	{ SetValue((int)SyslogFieldIndex.ICreateBy, value); }
		}

		/// <summary>The ICreateDate property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."i_create_date".<br/>Table field type characteristics (type, precision, scale, length): Timestamp, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> ICreateDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)SyslogFieldIndex.ICreateDate, false); }
			set	{ SetValue((int)SyslogFieldIndex.ICreateDate, value); }
		}

		/// <summary>The Id property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."id".<br/>Table field type characteristics (type, precision, scale, length): Bigint, 20, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int64 Id
		{
			get { return (System.Int64)GetValue((int)SyslogFieldIndex.Id, true); }
			set { SetValue((int)SyslogFieldIndex.Id, value); }		}

		/// <summary>The IdModified property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."id_modified".<br/>Table field type characteristics (type, precision, scale, length): Bigint, 20, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int64> IdModified
		{
			get { return (Nullable<System.Int64>)GetValue((int)SyslogFieldIndex.IdModified, false); }
			set	{ SetValue((int)SyslogFieldIndex.IdModified, value); }
		}

		/// <summary>The IState property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."i_state".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String IState
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.IState, true); }
			set	{ SetValue((int)SyslogFieldIndex.IState, value); }
		}

		/// <summary>The IUpdateBy property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."i_update_by".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String IUpdateBy
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.IUpdateBy, true); }
			set	{ SetValue((int)SyslogFieldIndex.IUpdateBy, value); }
		}

		/// <summary>The IUpdateDate property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."i_update_date".<br/>Table field type characteristics (type, precision, scale, length): Timestamp, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> IUpdateDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)SyslogFieldIndex.IUpdateDate, false); }
			set	{ SetValue((int)SyslogFieldIndex.IUpdateDate, value); }
		}

		/// <summary>The Name property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."name".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 300.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Name
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.Name, true); }
			set	{ SetValue((int)SyslogFieldIndex.Name, value); }
		}

		/// <summary>The Note property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."note".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 500.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Note
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.Note, true); }
			set	{ SetValue((int)SyslogFieldIndex.Note, value); }
		}

		/// <summary>The RequestBody property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."request_body".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 2000.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String RequestBody
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.RequestBody, true); }
			set	{ SetValue((int)SyslogFieldIndex.RequestBody, value); }
		}

		/// <summary>The RequestMethod property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."request_method".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String RequestMethod
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.RequestMethod, true); }
			set	{ SetValue((int)SyslogFieldIndex.RequestMethod, value); }
		}

		/// <summary>The ResponseBody property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."response_body".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 2000.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ResponseBody
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.ResponseBody, true); }
			set	{ SetValue((int)SyslogFieldIndex.ResponseBody, value); }
		}

		/// <summary>The State property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."state".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 100.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String State
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.State, true); }
			set	{ SetValue((int)SyslogFieldIndex.State, value); }
		}

		/// <summary>The Unitcode property of the Entity Syslog<br/><br/></summary>
		/// <remarks>Mapped on  table field: "syslogs"."unitcode".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Unitcode
		{
			get { return (System.String)GetValue((int)SyslogFieldIndex.Unitcode, true); }
			set	{ SetValue((int)SyslogFieldIndex.Unitcode, value); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace App.QTHTGis.Dal
{
	public enum SyslogFieldIndex
	{
		///<summary>ICreateBy. </summary>
		ICreateBy,
		///<summary>ICreateDate. </summary>
		ICreateDate,
		///<summary>Id. </summary>
		Id,
		///<summary>IdModified. </summary>
		IdModified,
		///<summary>IState. </summary>
		IState,
		///<summary>IUpdateBy. </summary>
		IUpdateBy,
		///<summary>IUpdateDate. </summary>
		IUpdateDate,
		///<summary>Name. </summary>
		Name,
		///<summary>Note. </summary>
		Note,
		///<summary>RequestBody. </summary>
		RequestBody,
		///<summary>RequestMethod. </summary>
		RequestMethod,
		///<summary>ResponseBody. </summary>
		ResponseBody,
		///<summary>State. </summary>
		State,
		///<summary>Unitcode. </summary>
		Unitcode,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace App.QTHTGis.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: Syslog. </summary>
	public partial class SyslogRelations: RelationFactory
	{

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticSyslogRelations
	{

		/// <summary>CTor</summary>
		static StaticSyslogRelations() { }
	}
}
