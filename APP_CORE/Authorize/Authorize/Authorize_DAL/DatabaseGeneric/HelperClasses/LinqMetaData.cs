//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.8.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Linq;
using System.Collections.Generic;
using SD.LLBLGen.Pro.LinqSupportClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;
using Authorize.Dal.EntityClasses;
using Authorize.Dal.FactoryClasses;

namespace Authorize.Dal.Linq
{
	/// <summary>Meta-data class for the construction of Linq queries which are to be executed using LLBLGen Pro code.</summary>
	public partial class LinqMetaData: ILinqMetaData
	{
		/// <summary>CTor. Using this ctor will leave the IDataAccessAdapter object to use empty. To be able to execute the query, an IDataAccessAdapter instance
		/// is required, and has to be set on the LLBLGenProProvider2 object in the query to execute. </summary>
		public LinqMetaData() : this(null, null) { }
		
		/// <summary>CTor which accepts an IDataAccessAdapter implementing object, which will be used to execute queries created with this metadata class.</summary>
		/// <param name="adapterToUse">the IDataAccessAdapter to use in queries created with this meta data</param>
		/// <remarks> Be aware that the IDataAccessAdapter object set via this property is kept alive by the LLBLGenProQuery objects created with this meta data till they go out of scope.</remarks>
		public LinqMetaData(IDataAccessAdapter adapterToUse) : this (adapterToUse, null) { }

		/// <summary>CTor which accepts an IDataAccessAdapter implementing object, which will be used to execute queries created with this metadata class.</summary>
		/// <param name="adapterToUse">the IDataAccessAdapter to use in queries created with this meta data</param>
		/// <param name="customFunctionMappings">The custom function mappings to use. These take higher precedence than the ones in the DQE to use.</param>
		/// <remarks> Be aware that the IDataAccessAdapter object set via this property is kept alive by the LLBLGenProQuery objects created with this meta data till they go out of scope.</remarks>
		public LinqMetaData(IDataAccessAdapter adapterToUse, FunctionMappingStore customFunctionMappings)
		{
			this.AdapterToUse = adapterToUse;
			this.CustomFunctionMappings = customFunctionMappings;
		}
	
		/// <summary>returns the datasource to use in a Linq query for the entity type specified</summary>
		/// <param name="typeOfEntity">the type of the entity to get the datasource for</param>
		/// <returns>the requested datasource</returns>
		public IDataSource GetQueryableForEntity(int typeOfEntity)
		{
			switch((Authorize.Dal.EntityType)typeOfEntity)
			{
				case Authorize.Dal.EntityType.DangkychiaseEntity:
					return this.Dangkychiase;
				case Authorize.Dal.EntityType.DmchucvuEntity:
					return this.Dmchucvu;
				case Authorize.Dal.EntityType.DmphongbanEntity:
					return this.Dmphongban;
				case Authorize.Dal.EntityType.DmtochucEntity:
					return this.Dmtochuc;
				case Authorize.Dal.EntityType.HomeShareEntity:
					return this.HomeShare;
				case Authorize.Dal.EntityType.SysappEntity:
					return this.Sysapp;
				case Authorize.Dal.EntityType.SysattachmentEntity:
					return this.Sysattachment;
				case Authorize.Dal.EntityType.SysdinhdanhEntity:
					return this.Sysdinhdanh;
				case Authorize.Dal.EntityType.SysdvhanhchinhEntity:
					return this.Sysdvhanhchinh;
				case Authorize.Dal.EntityType.SysdvqhnEntity:
					return this.Sysdvqhn;
				case Authorize.Dal.EntityType.SysgroupEntity:
					return this.Sysgroup;
				case Authorize.Dal.EntityType.SysgroupmenuEntity:
					return this.Sysgroupmenu;
				case Authorize.Dal.EntityType.SyslogEntity:
					return this.Syslog;
				case Authorize.Dal.EntityType.SyslogactionEntity:
					return this.Syslogaction;
				case Authorize.Dal.EntityType.SysmenuEntity:
					return this.Sysmenu;
				case Authorize.Dal.EntityType.SysRefreshtokenEntity:
					return this.SysRefreshtoken;
				case Authorize.Dal.EntityType.SystaomaEntity:
					return this.Systaoma;
				case Authorize.Dal.EntityType.SystudienEntity:
					return this.Systudien;
				case Authorize.Dal.EntityType.SysunitEntity:
					return this.Sysunit;
				case Authorize.Dal.EntityType.SysuserEntity:
					return this.Sysuser;
				case Authorize.Dal.EntityType.SysusergroupEntity:
					return this.Sysusergroup;
				case Authorize.Dal.EntityType.SysusermenuEntity:
					return this.Sysusermenu;
				case Authorize.Dal.EntityType.TochucChucvuEntity:
					return this.TochucChucvu;
				default:
					return null;
			}
		}

		/// <summary>returns the datasource to use in a Linq query for the entity type specified</summary>
		/// <typeparam name="TEntity">the type of the entity to get the datasource for</typeparam>
		/// <returns>the requested datasource</returns>
		public DataSource2<TEntity> GetQueryableForEntity<TEntity>()
				where TEntity : class
		{
			return new DataSource2<TEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse);
		}

		/// <summary>returns the datasource to use in a Linq query when targeting DangkychiaseEntity instances in the database.</summary>
		public DataSource2<DangkychiaseEntity> Dangkychiase {	get { return new DataSource2<DangkychiaseEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting DmchucvuEntity instances in the database.</summary>
		public DataSource2<DmchucvuEntity> Dmchucvu {	get { return new DataSource2<DmchucvuEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting DmphongbanEntity instances in the database.</summary>
		public DataSource2<DmphongbanEntity> Dmphongban {	get { return new DataSource2<DmphongbanEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting DmtochucEntity instances in the database.</summary>
		public DataSource2<DmtochucEntity> Dmtochuc {	get { return new DataSource2<DmtochucEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting HomeShareEntity instances in the database.</summary>
		public DataSource2<HomeShareEntity> HomeShare {	get { return new DataSource2<HomeShareEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysappEntity instances in the database.</summary>
		public DataSource2<SysappEntity> Sysapp {	get { return new DataSource2<SysappEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysattachmentEntity instances in the database.</summary>
		public DataSource2<SysattachmentEntity> Sysattachment {	get { return new DataSource2<SysattachmentEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysdinhdanhEntity instances in the database.</summary>
		public DataSource2<SysdinhdanhEntity> Sysdinhdanh {	get { return new DataSource2<SysdinhdanhEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysdvhanhchinhEntity instances in the database.</summary>
		public DataSource2<SysdvhanhchinhEntity> Sysdvhanhchinh {	get { return new DataSource2<SysdvhanhchinhEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysdvqhnEntity instances in the database.</summary>
		public DataSource2<SysdvqhnEntity> Sysdvqhn {	get { return new DataSource2<SysdvqhnEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysgroupEntity instances in the database.</summary>
		public DataSource2<SysgroupEntity> Sysgroup {	get { return new DataSource2<SysgroupEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysgroupmenuEntity instances in the database.</summary>
		public DataSource2<SysgroupmenuEntity> Sysgroupmenu {	get { return new DataSource2<SysgroupmenuEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SyslogEntity instances in the database.</summary>
		public DataSource2<SyslogEntity> Syslog {	get { return new DataSource2<SyslogEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SyslogactionEntity instances in the database.</summary>
		public DataSource2<SyslogactionEntity> Syslogaction {	get { return new DataSource2<SyslogactionEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysmenuEntity instances in the database.</summary>
		public DataSource2<SysmenuEntity> Sysmenu {	get { return new DataSource2<SysmenuEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysRefreshtokenEntity instances in the database.</summary>
		public DataSource2<SysRefreshtokenEntity> SysRefreshtoken {	get { return new DataSource2<SysRefreshtokenEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SystaomaEntity instances in the database.</summary>
		public DataSource2<SystaomaEntity> Systaoma {	get { return new DataSource2<SystaomaEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SystudienEntity instances in the database.</summary>
		public DataSource2<SystudienEntity> Systudien {	get { return new DataSource2<SystudienEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysunitEntity instances in the database.</summary>
		public DataSource2<SysunitEntity> Sysunit {	get { return new DataSource2<SysunitEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysuserEntity instances in the database.</summary>
		public DataSource2<SysuserEntity> Sysuser {	get { return new DataSource2<SysuserEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysusergroupEntity instances in the database.</summary>
		public DataSource2<SysusergroupEntity> Sysusergroup {	get { return new DataSource2<SysusergroupEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SysusermenuEntity instances in the database.</summary>
		public DataSource2<SysusermenuEntity> Sysusermenu {	get { return new DataSource2<SysusermenuEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting TochucChucvuEntity instances in the database.</summary>
		public DataSource2<TochucChucvuEntity> TochucChucvu {	get { return new DataSource2<TochucChucvuEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		


		/// <summary> Gets / sets the IDataAccessAdapter to use for the queries created with this meta data object.</summary>
		/// <remarks> Be aware that the IDataAccessAdapter object set via this property is kept alive by the LLBLGenProQuery objects created with this meta data
		/// till they go out of scope.</remarks>
		public IDataAccessAdapter AdapterToUse { get; set; }
		
		/// <summary>Gets or sets the custom function mappings to use. These take higher precedence than the ones in the DQE to use</summary>
		public FunctionMappingStore CustomFunctionMappings { get; set; }
		
		/// <summary>Gets or sets the Context instance to use for entity fetches.</summary>
		public Context ContextToUse { get; set; }
	}
}